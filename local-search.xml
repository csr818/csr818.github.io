<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>acwing第51场周赛</title>
    <link href="/2022/05/16/acwing%E7%AC%AC51%E5%9C%BA%E5%91%A8%E8%B5%9B/"/>
    <url>/2022/05/16/acwing%E7%AC%AC51%E5%9C%BA%E5%91%A8%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h3 id="AcWing-4420-连通分量"><a href="#AcWing-4420-连通分量" class="headerlink" title="AcWing 4420. 连通分量"></a><a href="https://www.acwing.com/problem/content/4423/">AcWing 4420. 连通分量</a></h3><blockquote><p>notes:<br>    1. stl会超时<br>    2. 并查集的应用<br>    3. 利用$sort$和$unique$手写去重 </p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>;<br><span class="hljs-type">int</span> s[N * N], cnt[N * N], dx[] = &#123; <span class="hljs-number">-1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span> &#125;, dy[] = &#123; <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">1</span> &#125;, n, m;<br><span class="hljs-type">char</span> g[N][N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (x != s[x]) s[x] = <span class="hljs-built_in">find</span>(s[x]);<br>    <span class="hljs-keyword">return</span> s[x];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n &gt;&gt; m;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) cin &gt;&gt; g[i];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n * m; i++) cnt[i] = <span class="hljs-number">1</span>, s[i] = i;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (g[i][j] == <span class="hljs-string">&#x27;.&#x27;</span>)<br>            &#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">4</span>; k++)<br>                &#123;<br>                    <span class="hljs-type">int</span> x = i + dx[k], y = j + dy[k];<br>                    <span class="hljs-keyword">if</span> (x &gt;= <span class="hljs-number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="hljs-number">0</span> &amp;&amp; y &lt; m &amp;&amp; g[x][y] == <span class="hljs-string">&#x27;.&#x27;</span>)<br>                    &#123;<br>                        <span class="hljs-type">int</span> a = <span class="hljs-built_in">find</span>(i * m + j), b = <span class="hljs-built_in">find</span>(x * m + y);<br>                        <span class="hljs-keyword">if</span> (a != b) s[a] = b, cnt[b] += cnt[a];<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (g[i][j] == <span class="hljs-string">&#x27;*&#x27;</span>)<br>            &#123;<br>                <span class="hljs-type">int</span> fathers[N * N], ed = <span class="hljs-number">0</span>, t = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">4</span>; k++)<br>                &#123;<br>                    <span class="hljs-type">int</span> x = i + dx[k], y = j + dy[k];<br>                    <span class="hljs-keyword">if</span> (x &gt;= <span class="hljs-number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="hljs-number">0</span> &amp;&amp; y &lt; m &amp;&amp; g[x][y] == <span class="hljs-string">&#x27;.&#x27;</span>)<br>                        fathers[ed++] = <span class="hljs-built_in">find</span>(x * m + y);<br>                &#125;<br>                <span class="hljs-built_in">sort</span>(fathers, fathers + ed);<br>                ed = <span class="hljs-built_in">unique</span>(fathers, fathers + ed) - fathers; <span class="hljs-comment">//注意这里的处理方式</span><br><br>                <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; ed; k++) <br>                    t += cnt[fathers[k]];<br>                cout &lt;&lt; t % <span class="hljs-number">10</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> cout &lt;&lt; <span class="hljs-string">&#x27;.&#x27;</span>;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AcWing-4421-信号"><a href="#AcWing-4421-信号" class="headerlink" title="AcWing 4421. 信号"></a><a href="https://www.acwing.com/problem/content/4424/">AcWing 4421. 信号</a></h3><blockquote><p>notes:</p><ol><li>贪心的做法 </li><li>注意代码里的写法</li><li>dp和贪心都是划分了问题的子集 但是不同的是 dp的每个状态都可能包含最优解 贪心要证明或者说明仅在一个子集中存在解</li></ol></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>;<br><span class="hljs-type">int</span> a[N], n, r, ed;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n &gt;&gt; r;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) <br>    &#123;<br>        <span class="hljs-type">int</span> t; cin &gt;&gt; t;<br>        <span class="hljs-keyword">if</span> (t) a[ed++] = i; <span class="hljs-comment">//只存储不为0的位置</span><br>    &#125;<br><br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>, last = <span class="hljs-number">0</span>; <span class="hljs-comment">//待覆盖的第一个位置</span><br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; ed; i++) <br>    &#123;<br>        <span class="hljs-keyword">if</span> (last &gt;= n) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span> (a[i] - r + <span class="hljs-number">1</span> &gt; last) <span class="hljs-keyword">break</span>; <span class="hljs-comment">//当前已出现无法覆盖的位置</span><br><br>        <span class="hljs-type">int</span> j = i; <span class="hljs-comment">//贪心的找到能覆盖当前位置的靠后的位置</span><br>        <span class="hljs-keyword">while</span> (j + <span class="hljs-number">1</span> &lt; ed &amp;&amp; a[j + <span class="hljs-number">1</span>] - r + <span class="hljs-number">1</span> &lt;= last) j++;<br>        last = a[j] + r;<br>        i = j;<br>        ans++;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (last &gt;= n) cout &lt;&lt; ans &lt;&lt; endl;<br>    <span class="hljs-keyword">else</span> cout &lt;&lt; <span class="hljs-number">-1</span> &lt;&lt; endl;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>周赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1120小木棍</title>
    <link href="/2022/05/13/P1120%E5%B0%8F%E6%9C%A8%E6%A3%8D/"/>
    <url>/2022/05/13/P1120%E5%B0%8F%E6%9C%A8%E6%A3%8D/</url>
    
    <content type="html"><![CDATA[<h3 id="P1120小木棍"><a href="#P1120小木棍" class="headerlink" title="P1120小木棍"></a><a href="https://www.luogu.com.cn/problem/P1120">P1120小木棍</a></h3><blockquote><p>notes:<br>主要是学习剪枝的技巧 一定要挖掘条件给的性质<br>这里所有的小木棒都要用完 每个等长(等价)<br>具体见注释</p></blockquote><p><em>有个玄学 压几条语句在一行会超时</em></p><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">70</span>;<br><br><span class="hljs-type">int</span> a[N], st[N], n, cnt, ll, sum;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u, <span class="hljs-type">int</span> len, <span class="hljs-type">int</span> v)</span> <span class="hljs-comment">//当前在拼第几根 当前这根已经的长度 下一个用来拼的编号</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (u == cnt) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//所有拼完</span><br><br>    <span class="hljs-keyword">if</span> (len == ll) <span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(u + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>); <span class="hljs-comment">//当前这根拼完 继续下一根</span><br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = v; i &lt; n; i++) <span class="hljs-comment">//这个循环是在找当前合适的 </span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (st[i]) <span class="hljs-keyword">continue</span>; <span class="hljs-comment">//已用 跳过</span><br><br>        <span class="hljs-keyword">if</span> (len + a[i] &lt;= ll) <span class="hljs-comment">//能放下去 </span><br>        &#123;<br>            st[i] = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">dfs</span>(u, len + a[i], i + <span class="hljs-number">1</span>)) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//可以拼好直接向上返回true</span><br>            st[i] = <span class="hljs-number">0</span>; <br><br>            <span class="hljs-comment">//拼接失败</span><br>            <span class="hljs-keyword">if</span> (!len) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">//如果当前的第一个就拼失败 那么由于剩余没有拼好的均等价，所以这根放不进去</span><br>            <span class="hljs-keyword">if</span> (len + a[i] == ll) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;  <span class="hljs-comment">//当已经 len + a[i] == ll 下一层递归会进入 dfs(u + 1, 0, 0)</span><br>            <span class="hljs-comment">//如果当前这根拼好了 但是下一层递归没有拼好 那么无论这里换成什么 也不能保证这个长度在之后的拼接中成功</span><br><br>            <span class="hljs-type">int</span> k = i + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (k &lt; n &amp;&amp; a[k] == a[k - <span class="hljs-number">1</span>]) k++;<br>            i = k - <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        cin &gt;&gt; a[i];<br>        sum += a[i];<br>        ll = <span class="hljs-built_in">max</span>(ll, a[i]); <span class="hljs-comment">//把这上面三行写在一行里会慢几毫秒</span><br>    &#125;<br><br>    <span class="hljs-built_in">sort</span>(a, a + n);<br>    <span class="hljs-built_in">reverse</span>(a, a + n); <span class="hljs-comment">//优化 先放大的 </span><br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (sum % ll == <span class="hljs-number">0</span>) &#123;<br>            cnt = sum / ll;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">dfs</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123; cout &lt;&lt; ll &lt;&lt; endl; <span class="hljs-keyword">break</span>; &#125;<br>        &#125;<br>        ll++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>dfs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1126 机器人搬重物</title>
    <link href="/2022/05/12/P1126-%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%90%AC%E9%87%8D%E7%89%A9/"/>
    <url>/2022/05/12/P1126-%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%90%AC%E9%87%8D%E7%89%A9/</url>
    
    <content type="html"><![CDATA[<h4 id="P1126"><a href="#P1126" class="headerlink" title="P1126"></a><a href="https://www.luogu.com.cn/problem/P1126">P1126</a></h4><blockquote><p>notes :</p><ol><li>关于朝向 始终是用<code>指针</code> 代替 真实值   </li><li>利用bfs 自然含有的最近性质</li><li>机器人在交点处走且有体积，而障碍物在方格中 所以 判断前方是否会碰到障碍物时见代码注释</li><li>由于机器人有体积 所以不能走到边缘 具体见代码注释</li></ol></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;queue&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">55</span>;<br><span class="hljs-type">int</span> dx[] = &#123; <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span> &#125;, dy[] = &#123; <span class="hljs-number">0</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span> &#125;; <span class="hljs-comment">//朝向</span><br><span class="hljs-type">int</span> g[N][N], rec[N][N][<span class="hljs-number">5</span>], n, m, a, b, c, d;<br><span class="hljs-type">char</span> op[<span class="hljs-number">5</span>];<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Node</span> &#123;<br>    <span class="hljs-type">int</span> r, c, d, dir;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>    queue&lt;Node&gt; q;<br>    q.<span class="hljs-built_in">push</span>(&#123;a, b, <span class="hljs-number">0</span>, u&#125;);<br><br>    <span class="hljs-keyword">while</span> (q.<span class="hljs-built_in">size</span>())<br>    &#123;<br>        <span class="hljs-keyword">auto</span> t = q.<span class="hljs-built_in">front</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-type">int</span> tx = t.r, ty = t.c, td = t.d, tdir = t.dir;<br>        <span class="hljs-keyword">if</span> (tx == c &amp;&amp; ty == d) <span class="hljs-keyword">return</span> td;<br>        <span class="hljs-keyword">if</span> (rec[tx][ty][tdir]) <span class="hljs-keyword">continue</span>;<br><br>        rec[tx][ty][tdir] = <span class="hljs-number">1</span>;<br>        <span class="hljs-comment">//换方向</span><br><br>        q.<span class="hljs-built_in">push</span>(&#123; tx, ty, td + <span class="hljs-number">1</span>, (tdir + <span class="hljs-number">1</span> + <span class="hljs-number">4</span>) % <span class="hljs-number">4</span> &#125;);<br>        q.<span class="hljs-built_in">push</span>(&#123; tx, ty, td + <span class="hljs-number">1</span>, (tdir - <span class="hljs-number">1</span> + <span class="hljs-number">4</span>) % <span class="hljs-number">4</span> &#125;);<br><br>        <span class="hljs-comment">//向前走</span><br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">3</span>; i++) <br>        &#123;<br>            <span class="hljs-type">int</span> nx = tx + i * dx[tdir], ny = ty + i * dy[tdir];<br>            <span class="hljs-keyword">if</span> (g[nx][ny] || g[nx + <span class="hljs-number">1</span>][ny] || g[nx][ny + <span class="hljs-number">1</span>] || g[nx + <span class="hljs-number">1</span>][ny + <span class="hljs-number">1</span>] || nx &lt;= <span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>; <span class="hljs-comment">//由于体积 判断是否会碰到障碍物</span><br>            <span class="hljs-keyword">if</span> (nx &gt;= <span class="hljs-number">1</span> &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= <span class="hljs-number">1</span> &amp;&amp; ny &lt; m &amp;&amp; !rec[nx][ny][tdir])  <span class="hljs-comment">//这里&lt;不能取等于 因为机器人有体积 不能碰壁</span><br>                q.<span class="hljs-built_in">push</span>(&#123;nx, ny, td + <span class="hljs-number">1</span>, tdir&#125;);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n &gt;&gt; m;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++) <br>            cin &gt;&gt; g[i][j];<br>    <br>    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; op;<br><br>    <span class="hljs-type">int</span> dir0;<br>    <span class="hljs-keyword">switch</span> (op[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;N&#x27;</span> : dir0 = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;W&#x27;</span> : dir0 = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;S&#x27;</span> : dir0 = <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;E&#x27;</span> : dir0 = <span class="hljs-number">3</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br><br>    cout &lt;&lt; <span class="hljs-built_in">bfs</span>(dir0) &lt;&lt; endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>bfs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3956 棋盘</title>
    <link href="/2022/05/10/P3956-md/"/>
    <url>/2022/05/10/P3956-md/</url>
    
    <content type="html"><![CDATA[<h4 id="P3956-棋盘"><a href="#P3956-棋盘" class="headerlink" title="P3956 棋盘"></a><a href="https://www.luogu.com.cn/problem/P3956">P3956 棋盘</a></h4><p>把题目转化为图论题 这是我的第一个建图的题</p><blockquote><p>notes:<br>    1. abs(xx[i] - xx[j]) + abs(yy[i] - yy[j]) 是一种判断是否在上下左右的简单写法<br>    2. 始终用 <em>索引</em> 值去代表一个节点<br>    3. 对终点的处理</p></blockquote><p><strong>其他的详细内容在注释里</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1010</span>, INF = <span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-type">int</span> g[N][N], d[N], xx[N], yy[N], col[N], m, n, x0 = <span class="hljs-number">-1</span>, ed, rec[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span> </span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">memset</span>(d, <span class="hljs-number">0x3f</span>, <span class="hljs-keyword">sizeof</span> d);<br><br>    d[u] = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++) &#123;<br>        <span class="hljs-type">int</span> t = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++) <br>            <span class="hljs-keyword">if</span> (!rec[j] &amp;&amp; (t == <span class="hljs-number">-1</span> || d[j] &lt; d[t])) t = j;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; j++) <br>            d[j] = <span class="hljs-built_in">min</span>(g[t][j] + d[t], d[j]);<br>        rec[t] = <span class="hljs-number">1</span>;<br>    &#125;   <br>    <span class="hljs-keyword">return</span> d[ed];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; m &gt;&gt; n;<br><br>    <span class="hljs-comment">//建图的过程</span><br>    <span class="hljs-type">bool</span> flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">//判断有没有出现终点位置</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; xx[i] &gt;&gt; yy[i] &gt;&gt; col[i];<br>        <span class="hljs-keyword">if</span> (xx[i] == m &amp;&amp; yy[i] == m) ed = i, flag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (xx[i] == <span class="hljs-number">1</span> &amp;&amp; yy[i] == <span class="hljs-number">1</span>) x0 = i;<br>    &#125;<br><br>    <span class="hljs-built_in">memset</span>(g, <span class="hljs-number">0x3f</span>, <span class="hljs-keyword">sizeof</span> g);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i + <span class="hljs-number">1</span>; j &lt;= n; j++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(xx[i] - xx[j]) + <span class="hljs-built_in">abs</span>(yy[i] - yy[j]) == <span class="hljs-number">1</span>) <br>                g[i][j] = g[j][i] = <span class="hljs-built_in">abs</span>(col[i] - col[j]); <br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(xx[i] - xx[j]) + <span class="hljs-built_in">abs</span>(yy[i] - yy[j]) == <span class="hljs-number">2</span>) <br>                g[i][j] = g[j][i] = <span class="hljs-built_in">abs</span>(col[i] - col[j]) + <span class="hljs-number">2</span>;<br>        &#125;<br><br>    <span class="hljs-keyword">if</span> (!flag) &#123; <span class="hljs-comment">//如果终点没有颜色 也就无法建图</span><br>        xx[n + <span class="hljs-number">1</span>] = yy[n + <span class="hljs-number">1</span>] = m;<br>        n++; ed = n; <span class="hljs-comment">//一定不要忘记了这里的修改ed</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(xx[i] - xx[n]) + <span class="hljs-built_in">abs</span>(yy[i] - yy[n]) == <span class="hljs-number">1</span>) <br>                g[i][n] = g[n][i] = <span class="hljs-number">2</span>;<br>    &#125;<br><br>    <span class="hljs-type">int</span> t = <span class="hljs-built_in">dijkstra</span>(x0);<br><br>    <span class="hljs-keyword">if</span> (t == INF) cout &lt;&lt; <span class="hljs-number">-1</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">else</span> cout &lt;&lt; t &lt;&lt; endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>图论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="/2022/05/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2022/05/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h4 id="hello-hexo"><a href="#hello-hexo" class="headerlink" title="hello hexo"></a>hello hexo</h4><hr><p>内容</p><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/10/hello-world/"/>
    <url>/2022/05/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
